{"version":3,"sources":["components/Header/Header.tsx","containers/Location/components/LocationAutocomplete/LocationAutocomplete.tsx","containers/Location/components/LocationList/LocationItem.tsx","containers/Location/components/LocationList/LocationList.tsx","containers/Location/slice/slice.tsx","containers/Location/slice/selectors.ts","containers/Location/Location.tsx","config/AppConfig.ts","containers/Weather/api/fetchWeather/fetchWeather.ts","containers/Weather/api/fetchForecast/fetchForecast.ts","utils/formatDate/formatDate.ts","containers/Weather/components/Forecast/ForecastItem.tsx","containers/Weather/components/Forecast/Forecast.tsx","containers/Weather/components/LocationInfo/LocationInfo.tsx","containers/Weather/components/WeatherInfo/WeatherInfo.tsx","containers/Weather/Weather.tsx","containers/Weather/hooks/usePosition/usePosition.ts","assets/images/not-found.svg","routes/NotFound.tsx","routes/RouterConfig.tsx","store/store.ts","styles/Theme.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","backIcon","marginRight","spacing","marginLeft","background","boxShadow","title","width","textAlign","position","zIndex","left","toolbar","justifyContent","Header","hasBackButton","children","classes","history","useHistory","AppBar","color","Container","maxWidth","Toolbar","className","Fab","onClick","goBack","size","ArrowBackIos","fontSize","Typography","variant","LocationAutocomplete","locations","setSearchText","onAddSelectedLocation","useState","open","setOpen","options","setOptions","loading","length","useEffect","Box","marginTop","Card","CardContent","Autocomplete","onOpen","onClose","getOptionSelected","option","value","id","getOptionLabel","name","country","onChange","_","onInputChange","renderInput","params","TextField","placeholder","label","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","endAdornment","CircularProgress","LocationItem","location","selectedLocation","noData","onRemoveOption","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","Button","LocationList","setParentSelectedLocation","onRemoveLocation","localSelectedLocation","setLocalSelectedLocation","console","log","List","ListItem","divider","button","map","selected","locationSlice","createSlice","initialState","reducers","unselectLocation","state","selectLocation","action","payload","addLocation","push","removeLocation","filter","actions","locationsSelector","selectedLocationSelector","Location","dispatch","useDispatch","useSelector","searchText","locationList","setLocationList","a","axios","get","response","filteredOptions","data","city","toLowerCase","indexOf","Grid","container","direction","item","selectedLocationOption","toast","success","warning","fullWidth","disabled","info","BASE_URL","API_KEY","ICON_URL","fetchWeather","latitude","longitude","fetchForecast","formatDate","date","format","datefns","Date","avatarWrapper","margin","ForecastItem","daily","dt","temp","weather","align","toDateString","Avatar","src","icon","parseInt","day","toString","Forecast","forecast","justify","md","locationWrapper","fontWeight","LocationInfo","weekDay","dayMonth","large","height","capitalize","textTransform","WeatherInfo","description","temperature","component","ListItemAvatar","forecastWrapper","Weather","setPosition","coords","onError","geolocation","navigator","watcher","watchPosition","clearWatch","usePosition","setWeather","setForecast","weatherLoading","setWeatherLoading","forecastLoading","setForecastLoading","currentDate","coord","lat","lon","shift","Link","to","disableElevation","endIcon","alignItems","sys","main","box","top","transform","NotFound","notFoundImage","RouterConfig","exact","path","persistConfig","key","storage","localStorage","appReducer","combineReducers","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","createMuiTheme","palette","App","CssBaseline","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.316ec9aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Typography, Container, makeStyles, Theme, Toolbar, AppBar, Fab } from '@material-ui/core';\r\nimport { ArrowBackIos } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { HeaderProps } from './types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  backIcon: {\r\n    marginRight: theme.spacing(2),\r\n    '& .MuiFab-label': {\r\n      marginLeft: 6,\r\n    },\r\n    background: 'transparent',\r\n    boxShadow: 'none',\r\n  },\r\n  title: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    position: 'absolute',\r\n    zIndex: -1,\r\n    left: 0,\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between',\r\n    zIndex: 1,\r\n  },\r\n}));\r\n\r\nconst Header: React.FC<HeaderProps> = ({ hasBackButton, children }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" color=\"primary\">\r\n      <Container maxWidth=\"md\">\r\n        <Toolbar className={classes.toolbar}>\r\n          {hasBackButton && (\r\n            <Fab onClick={() => history.goBack()} className={classes.backIcon} color=\"primary\" size=\"small\">\r\n              <ArrowBackIos fontSize=\"small\" />\r\n            </Fab>\r\n          )}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {children}\r\n          </Typography>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Box, Card, CardContent, CircularProgress, InputAdornment, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nimport { LocationData } from '../../slice';\r\nimport { LocationAutocompleteProps } from './types';\r\n\r\nconst LocationAutocomplete: React.FC<LocationAutocompleteProps> = ({ locations, setSearchText, onAddSelectedLocation }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState<LocationData[]>(locations);\r\n  const loading = open && options.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    setOptions(locations);\r\n  }, [locations]);\r\n\r\n  const onOptionSelection = (_: React.ChangeEvent<{}>, value: LocationData | null) => {\r\n    if (!value) return;\r\n\r\n    onAddSelectedLocation(value);\r\n  };\r\n\r\n  const onInputChanges = (_: React.ChangeEvent<{}>, value: string) => {\r\n    setSearchText(value);\r\n  };\r\n\r\n  return (\r\n    <Box marginTop={5}>\r\n      <Card>\r\n        <CardContent>\r\n          <Autocomplete\r\n            open={open}\r\n            onOpen={() => {\r\n              setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n              setOpen(false);\r\n            }}\r\n            getOptionSelected={(option, value) => option.id === value.id}\r\n            getOptionLabel={(option) => `${option.name}, ${option.country}`}\r\n            options={options}\r\n            loading={loading}\r\n            onChange={onOptionSelection}\r\n            onInputChange={onInputChanges}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                placeholder=\"Start typing at least 4 characters\"\r\n                variant=\"outlined\"\r\n                label=\"City\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <>\r\n                      {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                      {params.InputProps.endAdornment}\r\n                    </>\r\n                  ),\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LocationAutocomplete;\r\n","import React from 'react';\r\n\r\nimport { Button, ListItemIcon, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\r\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\r\n\r\nimport { LocationItemProps } from './types';\r\n\r\nexport const LocationItem: React.FC<LocationItemProps> = ({ location, selectedLocation, noData, onRemoveOption }) => {\r\n  const onRemove = () => {\r\n    if (!selectedLocation || !onRemoveOption) return;\r\n\r\n    onRemoveOption(selectedLocation);\r\n  };\r\n\r\n  if (noData) {\r\n    return (\r\n      <>\r\n        <ListItemIcon>\r\n          <PersonPinCircleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"No locations added\" />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListItemIcon>\r\n        <PersonPinCircleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary={location.name} secondary={selectedLocation?.id === location.id ? 'SELECTED' : ''} />\r\n      <ListItemSecondaryAction>\r\n        <Button color=\"primary\" onClick={onRemove}>\r\n          Remove\r\n        </Button>\r\n      </ListItemSecondaryAction>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\n\r\nimport { LocationData } from '../../slice';\r\nimport { LocationItem } from './LocationItem';\r\nimport { LocationListProps } from './types';\r\n\r\nconst LocationList: React.FC<LocationListProps> = ({ locations, selectedLocation, setParentSelectedLocation, onRemoveLocation: onRemoveOption }) => {\r\n  const [localSelectedLocation, setLocalSelectedLocation] = useState<LocationData | undefined | null>(selectedLocation);\r\n\r\n  useEffect(() => {\r\n    if (!localSelectedLocation) return;\r\n    console.log('selecting', localSelectedLocation);\r\n    setParentSelectedLocation(localSelectedLocation);\r\n  }, [localSelectedLocation]);\r\n\r\n  return (\r\n    <List>\r\n      {!locations.length && (\r\n        <ListItem divider button>\r\n          <LocationItem noData location={{} as LocationData} />\r\n        </ListItem>\r\n      )}\r\n\r\n      {locations.map((location) => (\r\n        <ListItem\r\n          key={location.id}\r\n          divider\r\n          button\r\n          selected={localSelectedLocation?.id === location.id}\r\n          onClick={() => setLocalSelectedLocation(location)}\r\n        >\r\n          <LocationItem location={location} selectedLocation={localSelectedLocation} onRemoveOption={onRemoveOption} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default LocationList;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { LocationData, LocationState } from './types';\r\n\r\nconst initialState: LocationState = {\r\n  locations: [],\r\n  selectedLocation: null,\r\n};\r\n\r\nexport const locationSlice = createSlice({\r\n  name: 'locationSlice',\r\n  initialState,\r\n  reducers: {\r\n    unselectLocation: (state) => {\r\n      state.selectedLocation = null;\r\n    },\r\n    selectLocation: (state, action: PayloadAction<LocationData>) => {\r\n      state.selectedLocation = action.payload;\r\n    },\r\n    addLocation: (state, action: PayloadAction<LocationData>) => {\r\n      state.locations.push(action.payload);\r\n    },\r\n    removeLocation: (state, action: PayloadAction<LocationData>) => {\r\n      state.locations = state.locations.filter((location) => location.id !== action.payload.id);\r\n      if (action.payload.id === state.selectedLocation?.id) {\r\n        state.selectedLocation = null;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectLocation, addLocation, removeLocation, unselectLocation } = locationSlice.actions;\r\n","import { RootState } from '../../../store';\r\n\r\nexport const locationsSelector = ({ locationSlice }: RootState) => locationSlice.locations;\r\n\r\nexport const selectedLocationSelector = ({ locationSlice }: RootState) => locationSlice.selectedLocation;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Box, Button, Container, Grid, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Header from '../../components/Header';\r\nimport LocationAutocomplete from './components/LocationAutocomplete';\r\nimport LocationList from './components/LocationList';\r\nimport { addLocation, LocationData, locationsSelector, removeLocation, selectedLocationSelector, selectLocation, unselectLocation } from './slice';\r\n\r\nconst Location: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const locations = useSelector(locationsSelector);\r\n  const selectedLocation = useSelector(selectedLocationSelector);\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [localSelectedLocation, setLocalSelectedLocation] = useState<LocationData | undefined | null>();\r\n  const [locationList, setLocationList] = useState<LocationData[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (searchText.length > 3) {\r\n      (async () => {\r\n        const response = await axios.get<LocationData[]>('data/city.list.json');\r\n        const filteredOptions = response.data.filter((city) => city.name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1);\r\n        setLocationList(filteredOptions);\r\n      })();\r\n    }\r\n  }, [searchText]);\r\n\r\n  const onAddSelectedLocation = (selectedLocationOption: LocationData) => {\r\n    dispatch(addLocation(selectedLocationOption));\r\n    toast.success('Location added');\r\n    setSearchText('');\r\n  };\r\n\r\n  const onRemoveLocation = (selectedLocationOption: LocationData) => {\r\n    dispatch(removeLocation(selectedLocationOption));\r\n    toast.warning('Location removed');\r\n  };\r\n\r\n  const onSetSelectedLocation = () => {\r\n    if (!localSelectedLocation) return;\r\n\r\n    dispatch(selectLocation(localSelectedLocation));\r\n    history.goBack();\r\n    toast.success('New location selected');\r\n  };\r\n\r\n  const onUnsetSelectedLocation = () => {\r\n    dispatch(unselectLocation());\r\n    toast.info('Selected location removed. Using current location');\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header hasBackButton={true}>Locations</Header>\r\n\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <LocationAutocomplete locations={locationList} setSearchText={setSearchText} onAddSelectedLocation={onAddSelectedLocation} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Box marginTop={10}>\r\n              <Typography variant=\"h6\">Locations</Typography>\r\n              <LocationList\r\n                locations={locations}\r\n                selectedLocation={selectedLocation}\r\n                setParentSelectedLocation={setLocalSelectedLocation}\r\n                onRemoveLocation={onRemoveLocation}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item>\r\n            <Box marginTop={5}>\r\n              <Button fullWidth variant=\"outlined\" color=\"primary\" onClick={onSetSelectedLocation} disabled={!localSelectedLocation}>\r\n                Use selected location\r\n              </Button>\r\n            </Box>\r\n            <Box marginTop={2}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\" onClick={onUnsetSelectedLocation}>\r\n                Use Current Location (GPS)\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","export const BASE_URL = 'http://api.openweathermap.org/data/2.5/';\r\n\r\nexport const API_KEY = 'daa952c424fb2f762c13f2f480cd27a4';\r\n\r\nexport const ICON_URL = 'http://openweathermap.org/img/w';\r\n","import axios from 'axios';\r\n\r\nimport { API_KEY, BASE_URL } from '../../../../config';\r\nimport { WeatherData } from './types';\r\n\r\nconst ENDPOINT = 'weather';\r\n\r\nexport const fetchWeather = async (latitude: number, longitude: number) =>\r\n  await axios.get<WeatherData>(\r\n    `${BASE_URL}${ENDPOINT}?units=metric&exclude=minutely,hourly,alerts&appid=${API_KEY}&lat=${latitude}&lon=${longitude}`,\r\n  );\r\n","import axios from 'axios';\r\n\r\nimport { API_KEY, BASE_URL } from '../../../../config';\r\nimport { ForecastData } from './types';\r\n\r\nconst ENDPOINT = 'onecall';\r\n\r\nexport const fetchForecast = async (latitude: number, longitude: number) =>\r\n  await axios.get<ForecastData>(\r\n    `${BASE_URL}${ENDPOINT}?units=metric&exclude=minutely,hourly,alerts,current&appid=${API_KEY}&lat=${latitude}&lon=${longitude}`,\r\n  );\r\n","import * as datefns from 'date-fns';\r\n\r\nexport const formatDate = (date: string, format = 'dd MMM yyyy'): string => datefns.format(new Date(date), format);\r\n","import React from 'react';\r\n\r\nimport { Avatar, Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport { ICON_URL } from '../../../../config';\r\nimport { formatDate } from '../../../../utils/formatDate';\r\nimport { ForecastItemProps } from './types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  avatarWrapper: {\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nexport const ForecastItem: React.FC<ForecastItemProps> = ({ daily: { dt, temp, weather } }) => {\r\n  const classes = useStyles();\r\n\r\n  const date = new Date(dt * 1000);\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              {formatDate(date.toDateString(), 'dd MMM')}\r\n            </Typography>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              {formatDate(date.toDateString(), 'EEE')}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatarWrapper} src={`${ICON_URL}/${weather[0].icon}.png`} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n              {parseInt(temp.day.toString())}º\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { ForecastItem } from './ForecastItem';\r\nimport { ForecastProps } from './types';\r\n\r\nconst Forecast: React.FC<ForecastProps> = ({ forecast }) => {\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3}>\r\n      {forecast.map((daily) => (\r\n        <Grid key={daily.dt} item md>\r\n          <ForecastItem daily={daily} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\r\n\r\nimport { Card, CardContent, makeStyles, Theme, Typography } from '@material-ui/core';\r\n\r\nimport { formatDate } from '../../../../utils/formatDate';\r\nimport { LocationInfoProps } from './types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  locationWrapper: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nconst LocationInfo: React.FC<LocationInfoProps> = ({ location, date }) => {\r\n  const classes = useStyles();\r\n\r\n  const weekDay = formatDate(date, 'EEEE');\r\n  const dayMonth = formatDate(date, 'dd MMMM');\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" align=\"center\" className={classes.locationWrapper}>\r\n          {location}\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          {weekDay}, {dayMonth}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LocationInfo;\r\n","import React from 'react';\r\n\r\nimport { Avatar, Card, CardContent, ListItem, ListItemAvatar, ListItemText, makeStyles, Theme, Typography } from '@material-ui/core';\r\n\r\nimport { ICON_URL } from '../../../../config';\r\nimport { WeatherInfoProps } from './types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  capitalize: {\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst WeatherInfo: React.FC<WeatherInfoProps> = ({ icon, description, temperature }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <ListItem component=\"div\">\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.large} src={`${ICON_URL}/${icon}.png`} />\r\n          </ListItemAvatar>\r\n          <ListItemText>\r\n            <Typography variant=\"h2\">{parseInt(temperature.toString())}º</Typography>\r\n            <Typography variant=\"h6\" className={classes.capitalize}>\r\n              {description}\r\n            </Typography>\r\n          </ListItemText>\r\n        </ListItem>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Button, CircularProgress, Container, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from '../../components/Header';\r\nimport { fetchWeather, selectedLocationSelector, WeatherData } from '../Location';\r\nimport { DailyData, fetchForecast, ForecastData } from './api/fetchForecast';\r\nimport Forecast from './components/Forecast';\r\nimport LocationInfo from './components/LocationInfo';\r\nimport WeatherInfo from './components/WeatherInfo';\r\nimport { usePosition } from './hooks/usePosition/usePosition';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  forecastWrapper: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Weather() {\r\n  const classes = useStyles();\r\n  const position = usePosition();\r\n\r\n  const selectedLocation = useSelector(selectedLocationSelector);\r\n\r\n  const [weather, setWeather] = useState<WeatherData>();\r\n  const [forecast, setForecast] = useState<DailyData[]>();\r\n  const [weatherLoading, setWeatherLoading] = useState(true);\r\n  const [forecastLoading, setForecastLoading] = useState(true);\r\n\r\n  const currentDate = new Date();\r\n\r\n  useEffect(() => {\r\n    let { latitude, longitude } = position;\r\n\r\n    if (selectedLocation) {\r\n      latitude = selectedLocation.coord.lat;\r\n      longitude = selectedLocation.coord.lon;\r\n    }\r\n\r\n    (async () => {\r\n      const response = await fetchWeather(latitude, longitude);\r\n      setWeather(response.data);\r\n      setWeatherLoading(false);\r\n    })();\r\n  }, [position.latitude, position.longitude]);\r\n\r\n  useEffect(() => {\r\n    let { latitude, longitude } = position;\r\n\r\n    if (selectedLocation) {\r\n      latitude = selectedLocation.coord.lat;\r\n      longitude = selectedLocation.coord.lon;\r\n    }\r\n\r\n    (async () => {\r\n      const {\r\n        data: { daily },\r\n      } = await fetchForecast(latitude, longitude);\r\n      daily.shift();\r\n      setForecast(daily);\r\n      setForecastLoading(false);\r\n    })();\r\n  }, [position.latitude, position.longitude]);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Button component={Link} to={'/locations'} color=\"primary\" variant=\"contained\" disableElevation={true} endIcon={<ExpandMoreIcon />}>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"caption\">Selected location</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"caption\">\r\n                {selectedLocation ? `${selectedLocation?.name}, ${selectedLocation?.country}` : 'Current Location (GPS)'}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Button>\r\n      </Header>\r\n\r\n      <Container component=\"main\" maxWidth=\"md\" className={classes.container}>\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={5}>\r\n          {weatherLoading && (\r\n            <Grid item>\r\n              <CircularProgress />\r\n            </Grid>\r\n          )}\r\n\r\n          {!weatherLoading && weather && (\r\n            <>\r\n              <Grid item>\r\n                <LocationInfo location={`${weather.name}, ${weather.sys.country}`} date={currentDate.toDateString()} />\r\n              </Grid>\r\n              <Grid item>\r\n                <WeatherInfo temperature={weather.main.temp} icon={weather.weather[0].icon} description={weather.weather[0].description} />\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          {forecastLoading && (\r\n            <Grid item>\r\n              <CircularProgress />\r\n            </Grid>\r\n          )}\r\n\r\n          {!forecastLoading && forecast && (\r\n            <Grid item className={classes.forecastWrapper}>\r\n              <Forecast forecast={forecast} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { UsePositionData } from './types';\r\n\r\nconst defaultLatitude = 38.7259284;\r\nconst defaultLongitude = -9.137382;\r\n\r\nexport const usePosition = () => {\r\n  const [position, setPosition] = useState<UsePositionData>({\r\n    latitude: defaultLatitude,\r\n    longitude: defaultLongitude,\r\n  });\r\n\r\n  const onChange = ({ coords }: GeolocationPosition) => {\r\n    setPosition({\r\n      latitude: coords.latitude,\r\n      longitude: coords.longitude,\r\n    });\r\n  };\r\n\r\n  const onError = () => {\r\n    console.log('error getting location');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { geolocation } = navigator;\r\n\r\n    if (!geolocation) {\r\n      return;\r\n    }\r\n\r\n    const watcher = geolocation.watchPosition(onChange, onError);\r\n\r\n    return () => geolocation.clearWatch(watcher);\r\n  }, []);\r\n\r\n  return { ...position };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/not-found.703e663c.svg\";","import React from 'react';\r\n\r\nimport { Box, Button, Container, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport notFoundImage from '../assets/images/not-found.svg';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  box: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    left: 0,\r\n  },\r\n}));\r\n\r\nexport const NotFound: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <div className={classes.box}>\r\n        <img src={notFoundImage} />\r\n\r\n        <Box marginTop={4}>\r\n          <Typography variant=\"h5\" color=\"textSecondary\">\r\n            404\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            Sorry, the page you visited does not exist\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Button color=\"primary\" variant=\"outlined\" component={Link} to=\"/\">\r\n          Back\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Location from '../containers/Location';\r\nimport Weather from '../containers/Weather';\r\nimport { NotFound } from './NotFound';\r\n\r\nexport const RouterConfig: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Weather />\r\n      </Route>\r\n\r\n      <Route exact path=\"/locations\">\r\n        <Location />\r\n      </Route>\r\n\r\n      <Route path=\"*\">\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport localStorage from 'redux-persist/lib/storage';\r\n\r\nimport { locationSlice } from '../containers/Location/slice';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: localStorage,\r\n};\r\n\r\nconst appReducer = combineReducers({\r\n  locationSlice: locationSlice.reducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, appReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles';\r\n\r\nconst primary = '#c60309';\r\n\r\nconst theme: ThemeOptions = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n    },\r\n    secondary: {\r\n      main: '#607d8b',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\n\nimport '@fontsource/roboto';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { RouterConfig } from './routes/RouterConfig';\nimport { persistor, store } from './store';\nimport theme from './styles/Theme';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <CssBaseline />\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <ToastContainer />\n          <BrowserRouter>\n            <RouterConfig />\n          </BrowserRouter>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}